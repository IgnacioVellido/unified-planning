(define (problem prob) (:domain dom)
  (:objects
    agenda - agenda
    contact1 - contact
    email1 - email
    account1 - emailaccount
    headOfDepartmentEMailAddress - emailaddress
    room101 - location
    headOfDepartmentPicture - picture
  )

  (:init
    (associated_Contact contact1 headOfDepartment)
    (associated_Picture contact1 headOfDepartmentPicture)
    (created contact1)
    (haveInformation_Contactable headOfDepartment headOfDepartmentEMailAddress)
    (haveInformation_Regular agenda)
    (haveInformation_Regular dateForMeeting)
    (haveInformation_Regular headOfDepartmentPicture)
    (haveInformation_Regular room101)
    (inMode_Home)
    (inUse contact1)
    (isFavourite contact1)
    (selected account1)
    (type_member_agenda agenda)
    (type_member_contact contact1)
    (type_member_contactable headOfDepartment)
    (type_member_contactableinformation headOfDepartmentEMailAddress)
    (type_member_creatable contact1)
    (type_member_date dateForMeeting)
    (type_member_email email1)
    (type_member_emailaccount account1)
    (type_member_emailaddress headOfDepartmentEMailAddress)
    (type_member_information agenda)
    (type_member_information dateForMeeting)
    (type_member_information headOfDepartmentEMailAddress)
    (type_member_information headOfDepartmentPicture)
    (type_member_information room101)
    (type_member_location room101)
    (type_member_message email1)
    (type_member_person headOfDepartment)
    (type_member_picture headOfDepartmentPicture)
    (type_member_regularinformation agenda)
    (type_member_regularinformation dateForMeeting)
    (type_member_regularinformation headOfDepartmentPicture)
    (type_member_regularinformation room101)
    (type_member_selectable account1)
    (type_member_selectable contact1)
    (type_member_transferablebycall dateForMeeting)
    (type_member_transferablebycall headOfDepartmentEMailAddress)
    (type_member_transferablebycall room101)
    (type_member_transferablebyemail agenda)
    (type_member_transferablebyemail dateForMeeting)
    (type_member_transferablebyemail headOfDepartmentEMailAddress)
    (type_member_transferablebyemail headOfDepartmentPicture)
    (type_member_transferablebyemail room101)
    (type_member_transferablebyemailcontactable headOfDepartmentEMailAddress)
    (type_member_transferablebyemailregular agenda)
    (type_member_transferablebyemailregular dateForMeeting)
    (type_member_transferablebyemailregular headOfDepartmentPicture)
    (type_member_transferablebyemailregular room101)
    (type_member_transferablebyphonecontactable headOfDepartmentEMailAddress)
    (type_member_transferablebyphoneregular dateForMeeting)
    (type_member_transferablebyphoneregular room101)
    (type_member_transferablebysms dateForMeeting)
    (type_member_transferablebysms headOfDepartmentEMailAddress)
    (type_member_transferablebysms room101)
    (type_member_transferablebysmscontactable headOfDepartmentEMailAddress)
    (type_member_transferablebysmsregular dateForMeeting)
    (type_member_transferablebysmsregular room101)
  )

  (:tasks-goal
      :tasks (
        (attachInformationToEMail email1 dateForMeeting)
        (send_EMail headOfDepartment email1)
        (extractsInformation headOfDepartment email1 dateForMeeting)
        (goal_action)
      )
  )
)
